package com.rima.model.bubbles.specialBubbles;

import com.rima.model.utilz.Constants;
import com.rima.model.entities.PlayerModel;
import com.rima.model.projectiles.ProjectileManagerModel;
import com.rima.model.projectiles.LightingProjectileModel;
import com.rima.model.utilz.Constants.Projectiles.ProjectileType;

import static com.rima.model.utilz.Constants.Bubble.BubbleType.LIGHTNING_BUBBLE;

/**
 * Represents a lightning bubble generated by the {@link BubbleGenerator}.
 *
 * <p>This class extends the SpecialBubbleModel and provides specific behavior for lightning bubbles.
 * When popped by the player, it spawns a {@link LightingProjectileModel}
 */
public class LightningBubbleModel extends SpecialBubbleModel {

    /**
     * Constructs a new LightningBubbleModel.
     *
     * @param x the starting x coordinate
     * @param y the starting y coordinate
     * @param direction the starting direction
     */
    public LightningBubbleModel(float x, float y, Constants.Direction direction) {
        super(x, y, direction);
        bubbleType = LIGHTNING_BUBBLE;
    }

    /**
     * Updates the state and position of the lightning bubble.
     *
     * <p>This method updates the timers, direction, position, collision boxes, and applies the Pac-Man effect.
     */
    @Override
    public void update() {
        updateTimers();
        updateDirection();
        updatePosition();
        updateCollisionBoxes();
        pacManEffect();
    }

    /**
     * Handles the player popping the lightning bubble.
     *
     * <p>This method deactivates the bubble and spawns a lightning projectile at the bubble's position.
     *
     * @param playerModel the player model
     */
    @Override
    public void playerPop(PlayerModel playerModel) {
        active = false;
        spawnLightingProjectile();
    }

    /**
     * Spawns a lightning projectile at the bubble's position.
     *
     * <p>This method creates a new {@link LightingProjectileModel} and adds it to the ProjectileManagerModel.
     */
    private void spawnLightingProjectile() {
        ProjectileManagerModel.getInstance().addProjectile(new LightingProjectileModel(hitbox.x, hitbox.y, ProjectileType.LIGHTNING));
    }
}